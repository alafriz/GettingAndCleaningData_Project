}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {}
if(x > 5) { x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?apply
?rowSums
x <- matrix(1:10, 2, 5)
x
rowSums(x)
colSums(x)
?quantile
apple(x, 1, quantile, probs = c(0.25, 0.75))
apply(x, 1, quantile, probs = c(0.25, 0.75))
?apply
apply(x, 2, quantile, probs = c(0.25, 0.75))
apply(x, 3, quantile, probs = c(0.25, 0.75))
dim(x)
lapply
?lapply
lapply(x, 3, quantile, probs = c(0.25, 0.75))
lapply(x, quantile, probs = c(0.25, 0.75))
lapply(x, y + 2, probs = c(0.25, 0.75))
lapply(x, y + 2)
lapply(x, x + 2)
lapply(x, function(y) {y + 2})
lapply(1:5, function(y) {y + 2})
sapply(1:5, function(y) {y + 2})
str(mapply)
list(rep(1,4))
list(rep(1,4), rep(2,3), rep(3,2), rep(4,1))
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4, 4:1, simplify = TRUE)
mapply(rep, 1:4, 1, simplify = TRUE)
mapply(rep, 1:4, 2, simplify = TRUE)
mapply(rep, 1:4, 2)
mapply(rep, 1:4, 1:2)
mapply(noise, 1:5, 1:5, 2)
noise <- function(n, mean, sd) {}
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise <- function(n, mean, sd) {}
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 0, 1)
mean(noise(500, 0, 1))
mean(noise(500, 0, 1))
mean(noise(500, 0, 1))
mean(noise(500, 0, 1))
mean(noise(500, 0, 1))
mean(noise(5000, 0, 1))
mean(noise(5000, 0, 1))
mean(noise(1:10, 0, 1))
lapply(mean, 1:10, 0 1)
lapply(mean, 1:10, 0, 1)
lapply(1:10, mean, 0, 1)
lapply(1:10, mean(noise), 0, 1)
mapply(noise, 1:5, 1:5, 2)
gl(3, 10)
rep(1:3, 30)
split(rep(1:3, 30), rep(1:6, 15))
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
x <- rnorm(10)
x
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x,list(f1,f2)))
list(f1,f2)
str(split(x,list(f1,f2), drop=TRUE))
traceback
traceback()
library(datasets)
data(iris)
iris
?iris
?apply
?tapply
?split
names(iris)
split(iris, "Species" = virginica)
traceback()
split(iris, Species)
split(iris, "Species")
iris
nrows(iris)
length(iris)
length(iris[1,])
length(iris[,1])
iris[,"Species" = virginica]
iris[,Species = virginica]
iris$Species = virginica
iris[Species = virginica]
iris(Species = virginica)
iris[Species = 'virginica']
iris[Species = "virginica"]
class(iris)
?subset
subset(iris, Species = 'virginica')
subset(iris, Species == 'virginica')
iris[Species == "virginica"]
?mean
colMeans(iris)
?colMeans
mean(iris)
?mean
iris$Sepal.Length
iris$Sepal.Length[Species == virginica]
iris[Sepal.Length,Species == virginica]
iris[Sepal.Length]
split(iris)
?split
split(iris,Species)
split(iris,"Species")
split(iris,mean)
lapply(split(iris,iris$Species))
lapply(split(iris,iris$Species), mean)
lapply(split(iris,iris$Species), mean(Sepal.Length))
lapply(split(iris,iris$Species), mean(iris$Sepal.Length))
spec <- split(iris, iris$Species)
spec
lapply(spec, function(x) colMeans(iris))
lapply(spec, function(x) colMeans(iris[]))
lapply(spec, colMeans(x))
lapply(spec, colMeans
)
lapply(spec, colMeans, x)
lapply(spec$Sepal.Length, mean())
lapply(spec$Sepal.Length, mean
)
lapply(spec$Sepal.Length, mean)
?lapply
spec
colMean(split)
colMean(split[3])
colMean(spec[3])
colMeans(spec[3])
spec[3]
class(split[3])
lapply(spec,colMeans)
sapply(iris, function(x) colMeans x["Sepal.Length"])
sapply(iris, function(x) colMeans(x["Sepal.Length"]))
sapply(iris, function(x) mean(x["Sepal.Length"]))
sapply(iris, function(x) mean(x[,"Sepal.Length"]))
sapply(iris, function(x) colMeans(x["Sepal.Length", "Sepal.Width"]))
sapply(iris, function(x) colMeans(iris["Sepal.Length", "Sepal.Width"]))
colMeans
colMeans(iris)
iris[Species == virginica]
iris[Species == "virginica"]
iris[Species == 'virginica']
names(iris)
iris$Species
iris[Species == virginica]
iris[Species == 'virginica']
iris[,Species == 'virginica']
iris[Species = 'virginica']
subset(iris, Species == 'viriginica')
subset(iris, Species == 'virginica')
vir <- subset(iris, Species == 'virginica')
length(vir)
length(,vir)
nrows(vir)
nrows(vir[,1])
length(vir[,1])
vir[,Sepal.Length]
vir[Sepal.Length]
class(vir)
vir$Sepal.Length
mean(vir$Sepal.Length)
iris[, 1:4]
?apply
colMeans[iris[, 1:4]]
colMeans(iris[, 1:4])
colMeans(iris$Species[, 1:4])
colMeans(iris[101:150, 1:4])
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris[101:150, 1:4], 2, mean)
library(datasets)
data(mtcars)
data(mtcars)
?mtcars
class(mtcars)
?tapply
mtcars$mpg
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars$cyl
library(datasets)
data(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
class(tapply(mtcars$hp, mtcars$cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)$4
tapply(mtcars$hp, mtcars$cyl, mean)[4]
tapply(mtcars$hp, mtcars$cyl, mean)[1]
?abs
tapply(mtcars$hp, mtcars$cyl, mean)[1] - tapply(mtcars$hp, mtcars$cyl, mean)[3]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
abs(tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1])
debug(ls)
ls()
setwd("~/datasciencecoursera/03-gettingandcleaningdata/quiz2")
myapp <- oauth_app("github", "87662db31c3a2c6fbdb8")
library(httr)
ouauth_endpoints("github")
install.packages(httr)
install.packages("httr")
install.packages("httr")
library(httr)
library("httr")
oauth_endpoints("github")
?oauth_app
myapp <- oauth_app("github", "87662db31c3a2c6fbdb8", "14ea972d181d6a656d79f4827419ca50b33a38b3")
mapp
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
install.packages("httpuv")
library("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/rate_limit")
req
stop_for_status(req)
content(req)
req
stop_for_status(req)
content(req)
class(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
?oauth_endpoints
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
myapp
gtoken
req = GET("https://api.github.com/users/jtleek/repos", gtoken)
req
req = GET("https://api.github.com/users/jtleek/repos", gtoken)
req
req = GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp
req
gtoken
content(gtoken)
> github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("sqldf")
library("sqldf")
?sqldf
?dbSendQuery
install.packages("RNySQL")
?RMySQL
con <- dbConnect("RMySQL")
install.packages("RMySQL")
library("RMySQL")
con <- dbConnect("RMySQL")
?RMySQL
acs <- dbConnect(MySQL(),user="alafrizr",host="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscDb
result <- dbGetQuery(ucscDb,"show databaes;")
result <- dbGetQuery(ucscDb,"show databases;")
result
dbDisconnect(ucscDb)
acs <- dbConnect(MySQL(),user="alafrizr",host="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.file("getdata-data-ss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.table("getdata-data-ss06pid.csv")
acs
head(acs)
dbListTables("getdata-data-ss06pid.csv")
View(acs)
?sqldf
data.frame("getdata-data-ss06pid.csv")
acs <- data.frame("getdata-data-ss06pid.csv")
acs
sqldf("show databases")
sqldf("show databases acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50", drv = SQLLite)
sqldf("select pwgtp1 from acs where AGEP < 50", drv = SQLite)
library(sqldf)
View(acs)
acs = readLines("getdata-data-ss06pid.csv")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50", drv = SQLite)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- data.frame("/getdata-data-ss06pid.csv")
acs
acs <- sqldf("getdata-data-ss06pid.csv")
acs <- sqldf("getdata-data-ss06pid.csv", drv = SQLite)
acs <- sqldf("./getdata-data-ss06pid.csv", drv = SQLite)
acs <- read.csv("getdata-data-ss06pid.csv")
result <- sqldf("show databases")
result <- sqldf("show databases", drv = "SQLite")
result <- sqldf("select * pwgtp1 from acs where AGEP < 50", drv = "SQLite")
result
resu;t = NULL
result = NULL
result <- sqldf("select * pwgtp1 from acs where AGEP < 50", drv = "SQLite")
result <- sqldf("select pwgtp1 from acs where AGEP < 50", drv = "SQLite")
result
result <- sqldf("select distinct pwgtp1 from acs")
result <- sqldf("select distinct pwgtp1 from acs", drv = "SQLite")
result
result <- sqldf("select distinct AGEP from acs", drv = "SQLite")
result
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
con
htmlCode = readLines(con)
htmlCode
?len
?length
length(htmlCode[10])
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[10]); nchar(htmlCode[20]); nchar(htmlCode[30]); nchar(htmlCode[100])
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
?read.fwf
con <- file("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
con
con[4,]
con[,4]
names(con)
read.fwf(con)
read.fwf(file("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
)
read.fwf(file("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for"))
read.fwf(file("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for"), 9)
read.fwf(url("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for"), 9)
nchar("Week          ")
nchar("SST SSTA     ")
nchar("03JAN1990     ")
nchar("23.4-0.4     ")
ncharP("25.1-0.3     ")
nchar("25.1-0.3     ")
read.fwf(url("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for"), 13)
con
read.fwf(con, 13)
close.connection(con)
close.connection(ucscDb)
download.file("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
url("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
con <- url("https://d396qusza40orc.cloudfront.net/getdata/wksst8110.for")
con
dat <- read.fwf(con, c(14, 13, 13, 13, 13))
dat <- read.fwf("wksst8110.for")
dat <- read.fwf("wksst8110.for", c(14, 13, 13, 13, 13))
dat
?sum
sum(dat[4])
sum(dat[4,])
sum(dat[,4])
dat <- read.fwf("wksst8110.for", c(14, 13, 13, 13, 13, 13, 13, 13, 13))
dat
dat <- read.fwf("wksst8110.for", c(14, 13, 13, 13, 13))
dat
nchar("03JAN1990")
widths <- c( 03JAN1990     23.4-0.4     25.1-0.3     26.6 0.0     28.6 0.3
)
head(dat)
widths <- c(nchar("03JAN1990      "), nchar("23.4"), nchar("-0.4      "), nchar("25.1"), nchar("-0.3      "), nchar("26.6"), nchar(" 0.0      "), nchar("28.6"), nchar(" 0.3"))
widths
dat <- read.fwf("wksst8110.for", widths)
dat
head(dat)
widths <- c(nchar(" 03JAN1990      "), nchar("23.4"), nchar("-0.4      "), nchar("25.1"), nchar("-0.3      "), nchar("26.6"), nchar(" 0.0      "), nchar("28.6"), nchar(" 0.3"))
head(dat)
dat <- read.fwf("wksst8110.for", widths)
head(dat)
nchar("     23.4")
nchar("-0.4   ")
nchar("     ")
dat <- read.fwf("wksst8110.for", c(nchar(" 03JAN1990     23.4-0.4     25.1-0.3     26.6 0.0     28.6 0.3
")))
dat
head(dat)
nchar(" 03JAN1990     23.4-0.4     25.1-0.3     26.6 0.0     28.6 0.3
")
dat <- read.fwf("wksst8110.for", c(63))
head(dat)
dat <- read.fwf("wksst8110.for", c(14,49))
head(dat)
dat <- read.fwf("wksst8110.for", c(15,48))
head(dat)
dat <- read.fwf("wksst8110.for", c(16,47))
head(dat)
dat <- read.fwf("wksst8110.for", c(15,48))
dat <- read.fwf("wksst8110.for", c(15,4,44))
dat <- read.fwf("wksst8110.for", c(15,4,44)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,4,40)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,10,36)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,19,37)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,10,36)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,9,37)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,9,4,9,24)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,9,4,9,4,9,11)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,9,4,9,4,9,4,7)); head(dat)
dat <- read.fwf("wksst8110.for[2:]", c(15,4,9,4,9,4,9,4,7)); head(dat)
dat <- read.fwf("wksst8110.for", c(15,4,9,4,9,4,9,4,7), skip = 4); head(dat)
dat
sum(dat[9,])
sum(dat[,9])
sum(dat[,4])
setwd("~/datasciencecoursera/03-gettingandcleaningdata/project")
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis.R
run_analysis
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
?right
test_name <- "total_acc_x_test.txt"
test_name
test_name[1:-4]
test_name[1:4]
substr(test_name, 1, -4)
substr(test_name, 1, 4)
substr(test_name, 1, length(test_name))
substr(test_name, 1, length(test_name)-4)
length(test_name)
substr(test_name, 1, nchar(test_name)-4)
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
?colbind
?colBind
?cbind
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
source('~/datasciencecoursera/03-gettingandcleaningdata/project/run_analysis.R')
run_analysis()
